name: Build-Test-Publish NET Project

on:
  workflow_call:
    inputs:
      SOLUTION_PATH:
        description: 'The path to the solution file'
        required: true
        type: string
      OUTPUT_FILENAME:
        description: 'Name of the outputfile'
        required: false
        type: string
        default: 'Build-Output'
      CONFIGURATION:
        description: 'Build configuration (e.g., Release or Debug)'
        required: false
        type: string
        default: 'Release'
      PLATFORM:
        description: 'Target platform (e.g., win-x64, linux-x64)'
        required: false
        type: string
        default: 'win-x64'
      TEST_PATH:
        description: 'The test csproj path'
        required: true
        type: string
env:
  AZURE_CONTAINER_REGISTRY: mydockerimagessancr7
  #CONTAINER_APP_NAME: refitapi
  RESOURCE_GROUP: acr_actions
  #run: |
    #echo "seccc - ${{ secrets.AZURE_REGISTRY_USERNAME }}"
  
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Access and Use the Secret
        env:
          AZURE_REGISTRY_USERNAME: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          AZURE_REGISTRY_PASSWORD: ${{ secrets.AZURE_REGISTRY_PASSWORD }}
        run: |
          #echo "The secret is being accessed"
          if [ -z "$AZURE_REGISTRY_USERNAME" ]; then
            echo "Secret is not set!"
          else
            echo "Secret is available and working!"
          #fi
          
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build the project
        run: dotnet build ${{ inputs.SOLUTION_PATH }} --configuration ${{ inputs.CONFIGURATION }}

      - name: Run Tests
        run: dotnet test ${{ inputs.TEST_PATH }} --configuration ${{ inputs.CONFIGURATION }} --logger "trx;LogFileName=TestResults.trx" --results-directory ./deploy/TestResults

      #- name: Upload Test Results
        #uses: actions/upload-artifact@v4
        #with:
          #name: TestResults
          #path: ./deploy

      - name: Publish the project
        run: dotnet publish ${{ inputs.SOLUTION_PATH }} --configuration ${{ inputs.CONFIGURATION }} --runtime ${{ inputs.PLATFORM }} --output ./deploy --self-contained false

      # Artifact version
      - name: Define Artifact Version
        id: version
        run: |
          BASE_VERSION="5.1.1.1"
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-8)
          ARTIFACT_VERSION="${BASE_VERSION}-${SHORT_SHA}"
          echo "ARTIFACT_VERSION=${ARTIFACT_VERSION}" >> $GITHUB_ENV
          echo ${{ env.ARTIFACT_VERSION }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.OUTPUT_FILENAME }}-${{ env.ARTIFACT_VERSION }}
          path: ./deploy
